{"version":3,"sources":["HeaderContext.tsx","AppDrawer.tsx","navigation.tsx","Header.tsx","components/ProjectPage/FilterButton.tsx","components/ProjectPage/ProjectsContext.tsx","components/ProjectPage/FilterButtonProjectLanguage.tsx","components/ProjectPage/FilterButtonProjectFramework.tsx","components/ProjectPage/FilterButtons.tsx","ProjectTitleBar.tsx","Project.tsx","ProjectImage.tsx","components/PDFViewer/PDFViewer.tsx","DefaultProject.tsx","CollapseOnEnter.tsx","components/ProjectPage/ProjectGrid.tsx","useWindowSize.tsx","components/ProjectPage/UpdateProjectsFromServer.tsx","components/ProjectPage/ProjectPage.tsx","components/ContactPage/ContactPage.tsx","components/ResumePage/ResumeViewer.tsx","components/ResumePage/ResumeDownload.tsx","components/ResumePage/ResumePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HeaderState","headerState","key","isOpen","this","HeaderActionsReducer","prev","HeaderActions","useStateResult","undefined","headerAction","setState","open","close","HeaderContext","createContext","HeaderContextProvider","props","Provider","value","useState","useHeaderContext","useContext","AppDrawer","history","useHistory","drawer","Divider","List","ListItem","button","onClick","push","toProjects","ListItemIcon","ListItemText","primary","toAboutMe","toResume","toContact","Drawer","variant","ModalProps","keepMounted","style","display","alignItems","justifyContent","IconButton","Header","HeaderAppBar","AppBar","position","Toolbar","edge","color","aria-label","Typography","FilterButton","onActive","onDeactive","children","active","setActive","Button","borderRadius","marginLeft","ProjectsState","projects","filterLanguages","filterFrameworks","selectedProject","filterFuncLanguages","languages","p","some","language","includes","filterFuncFrameworks","frameworks","framework","filter","ProjectsActionsReducer","addProjects","setLanguageFilter","removeLanguageFilter","setFrameworkFilter","removeFrameworkFilter","setSelectedProject","length","Action","createSingle","ProjectsContextProvider","useProjectsContext","FilterButtonProjectLanguage","projectsState","projectsThatMatchLanguages","FilterButtonProjectFramework","projectsThatMatchFrameworks","FilterButtons","userId","width","marginRight","textAlign","ProjectTitleBar","project","hovering","name","description","Card","CardHeader","title","subheader","Project","data","images","setHovering","cursor","height","onMouseLeave","onMouseEnter","objectFit","src","path","bottom","ProjectImage","image","flex","maxWidth","maxHeight","PDFPage","pageNumber","pageWidth","loaded","setLoaded","skeletonWidth","skeletonHeight","Skeleton","renderAnnotationLayer","onLoadSuccess","renderMode","PDFViewer","file","numPages","setNumPages","pageRef","useRef","setPageWidth","useEffect","current","getBoundingClientRect","pages","i","ref","flexDirection","overflowY","DefaultProject","page","pdf","CardContent","flexWrap","img","exclude","map","allow","border","pdfjs","GlobalWorkerOptions","workerSrc","version","CollapseOnEnter","setOpen","Collapse","in","unmountOnExit","AddProjectPage","myRef","scrollIntoView","marginTop","marginBottom","ProjectGrid","filteredProjects","size","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","aspect","cols","Math","max","floor","cellHeight","tiles","forEach","index","projectPages","selected","AddProjectPageBelow","GridListTile","GridList","overflow","projectList","UpdateProjectsFromServer","projectContext","old","a","fetch","response","json","ProjectPage","ContactPage","ResumeViewer","ResumeDownload","parents","download","arrayBuffer","fileDownload","action","ResumePage","theme","createMuiTheme","palette","type","App","ThemeProvider","className","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9190c144.chunk.js","sourcesContent":["\r\nimport React, { createContext, ReactNode, useState, useContext, useReducer } from \"react\";\r\n\r\nclass HeaderState {\r\n    public isOpen: boolean = false;\r\n\r\n    constructor(headerState?: HeaderState) {\r\n        for (let key in headerState) {\r\n            //@ts-ignore\r\n            this[key] = headerState[key];\r\n        }\r\n    }\r\n}\r\n\r\nclass HeaderActionsReducer {\r\n    static open(prev: HeaderState) {\r\n        return { ...prev, isOpen: true }\r\n    }\r\n\r\n    static close(prev: HeaderState) {\r\n        return { ...prev, isOpen: false }\r\n    }\r\n}\r\n\r\nclass HeaderActions extends HeaderState {\r\n    private setState?: React.Dispatch<React.SetStateAction<HeaderState>>;\r\n    constructor(useStateResult? : [HeaderState, React.Dispatch<React.SetStateAction<HeaderState>>] ) {\r\n        const [headerAction, setState] = useStateResult || [new HeaderState(), undefined];\r\n        super(headerAction);\r\n        this.setState = setState;\r\n    }\r\n\r\n    open1(prev: HeaderState) {\r\n        return { ...prev, isOpen: true };\r\n    }\r\n\r\n    open() { if(this.setState) this.setState(HeaderActionsReducer.open);}\r\n\r\n    close() {if(this.setState) this.setState(HeaderActionsReducer.close);}\r\n}\r\n\r\nexport const HeaderContext = createContext(new HeaderActions());\r\n\r\nexport function HeaderContextProvider(props: { children: ReactNode, value?: HeaderState }) {\r\n    return <HeaderContext.Provider {...props} value={new HeaderActions(useState(props.value || new HeaderState()))} />\r\n}\r\n\r\nexport const useHeaderContext = () => useContext(HeaderContext);\r\n\r\n\r\n\r\n\r\n","import { Divider, Drawer, IconButton, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core'\r\nimport React from 'react'\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport { useHeaderContext } from './HeaderContext';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport { toProjects, toAboutMe, toContact, toResume } from \"./navigation\";\r\nimport { useHistory } from 'react-router';\r\n\r\nexport default function AppDrawer() {\r\n\r\n    //const container = window !== undefined ? () => window.document.body : undefined;\r\n    const headerState = useHeaderContext();\r\n    const history = useHistory();\r\n\r\n    const drawer = (\r\n        <div>\r\n            <Divider />\r\n            <List>\r\n                <ListItem button onClick={()=>{toProjects(history)(); headerState.close();}}>\r\n                    <ListItemIcon><CodeIcon /></ListItemIcon>\r\n                    <ListItemText primary={'Projects'} />\r\n                </ListItem>\r\n                <ListItem button onClick={()=>{toAboutMe(history)(); headerState.close();}}>\r\n                    <ListItemIcon> <PersonIcon /> </ListItemIcon>\r\n                    <ListItemText primary={'About Me'} />\r\n                </ListItem>\r\n\r\n            </List>\r\n\r\n            <Divider />\r\n            <List>\r\n                <ListItem button onClick={()=>{toResume(history)(); headerState.close();}}>\r\n                    <ListItemIcon><DescriptionIcon /> </ListItemIcon>\r\n                    <ListItemText primary={'Resume'} />\r\n                </ListItem>\r\n                <ListItem button onClick={()=>{toContact(history)(); headerState.close();}}>\r\n                    <ListItemIcon><MailIcon /></ListItemIcon>\r\n                    <ListItemText primary={'Contact'} />\r\n                </ListItem>\r\n\r\n            </List>\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n    return <Drawer\r\n        variant=\"temporary\"\r\n        open={headerState.isOpen}\r\n        ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n        }}\r\n    >\r\n        <div style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n        }}>\r\n\r\n\r\n            <IconButton onClick={() => { headerState.close(); }}>\r\n                <ChevronLeftIcon />\r\n            </IconButton>\r\n        </div>\r\n        {drawer}\r\n    </Drawer>\r\n}","import {History} from 'history'\r\n\r\nexport const toProjects = (history : History)=>()=>{\r\n    history.push(\"/Projects/\")\r\n}\r\n\r\nexport const toResume = (history : History)=>()=>{\r\n    history.push(\"/Resume/\")\r\n}\r\n\r\nexport const toAboutMe = (history : History)=>()=>{\r\n    history.push(\"/AboutMe/\")\r\n}\r\n\r\nexport const toContact = (history : History)=>()=>{\r\n    history.push(\"/Contact/\")\r\n}\r\n","import React from 'react';\r\nimport { IconButton, Toolbar } from '@material-ui/core';\r\nimport { AppBar, Typography } from '@material-ui/core';\r\nimport AppDrawer from './AppDrawer';\r\nimport { HeaderContextProvider, useHeaderContext } from './HeaderContext';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n\r\nexport default function Header() {\r\n    return <HeaderContextProvider>\r\n        <HeaderAppBar />\r\n    </HeaderContextProvider>\r\n\r\n}\r\n\r\nfunction HeaderAppBar() {\r\n    const headerState = useHeaderContext();\r\n\r\n    return <AppBar position=\"relative\">\r\n\r\n        <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={() => headerState.open()} >\r\n                <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\">\r\n                Luke Hawkins - My Projects\r\n    </Typography>\r\n        </Toolbar>\r\n        <AppDrawer />\r\n    </AppBar>\r\n}\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\n\r\ninterface Props {\r\n    children?: React.ReactNode,\r\n    onActive?: () => void,\r\n    onDeactive?: () => void\r\n}\r\n\r\nexport function FilterButton({ onActive, onDeactive, children }: Props) {\r\n    const [active, setActive] = useState(false);\r\n    const onClick = () => {\r\n        if (active) {\r\n            if (onDeactive) onDeactive()\r\n        }\r\n        else { \r\n            if (onActive) onActive() \r\n        }\r\n        setActive(!active);\r\n    };\r\n\r\n    const color = active? 'secondary' : 'primary';\r\n\r\n    return <Button color={color} onClick={onClick} variant=\"contained\" style={{ borderRadius: 16, display: 'inline-block', marginLeft: '15px' }}>{children}</Button>;\r\n}","\r\nimport { createSingle, Action } from \"context-class\";\r\nimport ProjectData from './../../interfaces/ProjectData';\r\n\r\nexport class ProjectsState extends Action<ProjectsState> {\r\n    public projects: ProjectData[] = [];\r\n    public filterLanguages: string[] = [];\r\n    public filterFrameworks: string[] = [];\r\n    public selectedProject?: number;\r\n\r\n\r\n    public get filteredProjects(): ProjectData[] {\r\n        const filter = (p: ProjectData) =>\r\n            this.filterFuncLanguages(this.filterLanguages)(p) || this.filterFuncFrameworks(this.filterFrameworks)(p)\r\n\r\n\r\n        return (this.filterLanguages.length > 0 || this.filterFrameworks.length > 0) ? this.projects.filter(filter) : this.projects;\r\n    }\r\n\r\n    public projectsThatMatchLanguages(languages: string[]) {\r\n        return this.projects.filter(this.filterFuncLanguages(languages));\r\n    }\r\n\r\n    public projectsThatMatchFrameworks(frameworks: string[]) {\r\n        return this.projects.filter(this.filterFuncFrameworks(frameworks));\r\n    }\r\n\r\n    private filterFuncLanguages = (languages: string[]) => (p: ProjectData) => p.languages?.some(language => languages.includes(language))\r\n\r\n    private filterFuncFrameworks = (frameworks: string[]) => (p: ProjectData) => p.frameworks?.some(framework => frameworks.includes(framework))\r\n\r\n\r\n    addProjects(projects: ProjectData[]) { this.setState(ProjectsActionsReducer.addProjects(projects)); }\r\n\r\n    setLanguageFilter(languages: string[]) { this.setState(ProjectsActionsReducer.setLanguageFilter(languages)); }\r\n\r\n    removeLanguageFilter(languages: string[]) { this.setState(ProjectsActionsReducer.removeLanguageFilter(languages)); }\r\n\r\n    setFrameworkFilter(frameworks: string[]) { this.setState(ProjectsActionsReducer.setFrameworkFilter(frameworks)); }\r\n\r\n    removeFrameworkFilter(frameworks: string[]) { this.setState(ProjectsActionsReducer.removeFrameworkFilter(frameworks)); }\r\n\r\n    setSelectedProject(selectedProject?: number) { this.setState(ProjectsActionsReducer.setSelectedProject(selectedProject)); }\r\n}\r\n\r\n\r\nexport class ProjectsActionsReducer {\r\n    static addProjects = (projects: ProjectData[]) => (prev: ProjectsState): ProjectsState => {\r\n        return { ...prev, projects: [...prev.projects, ...projects] } as ProjectsState\r\n    }\r\n\r\n    static setLanguageFilter = (languages: string[]) => (prev: ProjectsState): ProjectsState => {\r\n        return { ...prev, filterLanguages: [...prev.filterLanguages, ...languages] } as ProjectsState\r\n    }\r\n\r\n    static removeLanguageFilter = (languages: string[]) => (prev: ProjectsState): ProjectsState => {\r\n        const filterLanguages = prev.filterLanguages.filter((language) => !languages.includes(language));\r\n\r\n        return { ...prev, filterLanguages } as ProjectsState\r\n    }\r\n\r\n\r\n    static setFrameworkFilter = (frameworks: string[]) => (prev: ProjectsState): ProjectsState => {\r\n        return { ...prev, filterFrameworks: [...prev.filterFrameworks, ...frameworks] } as ProjectsState\r\n    }\r\n\r\n    static removeFrameworkFilter = (frameworks: string[]) => (prev: ProjectsState): ProjectsState => {\r\n        const filterFrameworks = prev.filterFrameworks.filter((framework) => !frameworks.includes(framework));\r\n\r\n        return { ...prev, filterFrameworks } as ProjectsState\r\n    }\r\n\r\n    static setSelectedProject = (selectedProject?: number) => (prev: ProjectsState): ProjectsState => {\r\n        return { ...prev, selectedProject } as ProjectsState\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const [ProjectsContextProvider, useProjectsContext] = createSingle(new ProjectsState());\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { FilterButton } from './FilterButton';\r\nimport { useProjectsContext } from './ProjectsContext';\r\n\r\ninterface Props {\r\n    children?: React.ReactNode,\r\n    languages: string[]\r\n}\r\n\r\nexport function FilterButtonProjectLanguage({ children, languages }: Props) {\r\n    const projectsState = useProjectsContext();\r\n\r\n\r\n    return <FilterButton\r\n        onActive={() => projectsState.setLanguageFilter(languages)}\r\n        onDeactive={() => projectsState.removeLanguageFilter(languages)} >\r\n        {children} \r\n        {\" \"}\r\n        {projectsState.projectsThatMatchLanguages(languages).length}\r\n    </FilterButton>\r\n\r\n}","import React from 'react';\r\nimport { FilterButton } from './FilterButton';\r\nimport { useProjectsContext } from './ProjectsContext';\r\n\r\ninterface Props {\r\n    children?: React.ReactNode,\r\n    frameworks: string[]\r\n}\r\n\r\nexport function FilterButtonProjectFramework({ children, frameworks }: Props) {\r\n    const projectsState = useProjectsContext();\r\n\r\n    return <FilterButton\r\n        onActive={() => projectsState.setFrameworkFilter(frameworks)}\r\n        onDeactive={() => projectsState.removeFrameworkFilter(frameworks)} >\r\n        {children}\r\n        {\" \"}\r\n        {projectsState.projectsThatMatchFrameworks(frameworks).length}\r\n    </FilterButton>\r\n\r\n}","import React from 'react';\r\nimport { FilterButton } from './FilterButton';\r\nimport { useProjectsContext } from './ProjectsContext';\r\nimport { FilterButtonProjectLanguage } from './FilterButtonProjectLanguage';\r\nimport {FilterButtonProjectFramework} from './FilterButtonProjectFramework';\r\nimport { Typography } from '@material-ui/core';\r\n\r\ninterface Props {\r\n    children?: any[],\r\n    userId?: string\r\n}\r\n\r\nexport function FilterButtons({ children, userId }: Props) {\r\n\r\n    return <div style={{width:\"100%\"}}>\r\n        <div style={{ marginLeft: '10%', marginRight:\"10%\", textAlign: 'left' }} >\r\n            <Typography variant=\"h4\" color=\"textPrimary\" style={{display:\"inline-block\"}} >Filters</Typography>\r\n            <FilterButtonProjectLanguage languages={[\"C++\", \"c++\"]} >C++</FilterButtonProjectLanguage>\r\n            <FilterButtonProjectLanguage languages={[\"C#\", \"c#\"]} >C#</FilterButtonProjectLanguage>\r\n            <FilterButtonProjectLanguage languages={[\"python\",\"Python\"]} >Python</FilterButtonProjectLanguage>\r\n            <FilterButtonProjectLanguage languages={[\"js\",\"Js\",\"JS\",\"javascript\",\"Javascript\"]} >Javascript</FilterButtonProjectLanguage>\r\n            <FilterButtonProjectLanguage languages={[\"ts\",\"Ts\",\"TS\",\"typescript\",\"Typescript\"]} >Typescript</FilterButtonProjectLanguage>\r\n            <FilterButtonProjectFramework frameworks={[\"react\",\"React\"]} >React</FilterButtonProjectFramework>\r\n            <FilterButtonProjectFramework frameworks={[\"opengl\",\"OpenGL\"]} >OpenGL</FilterButtonProjectFramework>\r\n            <FilterButtonProjectFramework frameworks={[\"SFML\",\"sfml\"]} >SFML</FilterButtonProjectFramework>\r\n            <FilterButtonProjectFramework frameworks={[\"unity\",\"Unity\", \"Unity3D\", \"Unity3d\", \"unity3D\", \"unity3d\"]} >Unity3D</FilterButtonProjectFramework>\r\n        </div>\r\n    </div>\r\n}","import { Card, CardContent, CardHeader, Typography } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport ProjectData from './interfaces/ProjectData'\r\n\r\ninterface Props {\r\n    project: ProjectData,\r\n    hovering?: boolean\r\n}\r\n\r\n\r\nexport default function ProjectTitleBar({ project, hovering = true }: Props) {\r\n    var { name, description, } = project;\r\n\r\n\r\n\r\n    return <Card>\r\n        <CardHeader title={name} subheader={hovering && <Typography variant=\"body1\" >{description}</Typography>} />\r\n    </Card>\r\n}\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport ProjectData, { Widget as WidgetType } from './interfaces/ProjectData';\r\nimport { Card, CardActions, CardContent, CardHeader, Collapse, IconButton, Typography } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ProjectImage from './ProjectImage';\r\nimport { GridList, GridListTile, GridListTileBar, ListSubheader } from '@material-ui/core';\r\nimport ProjectTitleBar from './ProjectTitleBar'\r\ninterface Props {\r\n    data: ProjectData,\r\n    onClick: ()=>void\r\n}\r\n\r\n\r\nexport default function Project({ data, onClick }: Props) {\r\n    var { name, description, images } = data;\r\n\r\n    let [hovering, setHovering] = useState(false);\r\n\r\n    const handleMouseEnter = ()=>{\r\n        setHovering(true)\r\n        \r\n    }\r\n\r\n    const handleMouseLeave = ()=>{\r\n        setHovering(false)\r\n    }\r\n\r\n\r\n    return <div style={{ cursor: \"pointer\", width: \"100%\", height: \"100%\", position:'relative'}} onClick={onClick} onMouseLeave={handleMouseLeave} onMouseEnter={handleMouseEnter}>\r\n        {images?.length > 0 && <img style={{ objectFit: \"cover\", width: \"100%\", height: \"100%\" }} src={images[0].path} />}\r\n        <div style={{position:'absolute', bottom:0, width:\"100%\"}}> \r\n            <ProjectTitleBar project={data} hovering={hovering} />\r\n        </div>\r\n    </div>\r\n}","import { Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport {ImageData} from './interfaces/ProjectData'\r\n\r\ninterface Props{\r\n    image: ImageData\r\n}\r\n\r\n\r\nexport default function ProjectImage({image} : Props){\r\n    \r\n    return <div style={{ flex: 1 }}>\r\n        <Typography variant=\"h6\" >{image.title}</Typography>\r\n        <Typography variant=\"body2\" >{image.description}</Typography>\r\n        <img style={{ maxWidth: \"100%\", maxHeight: \"30vh\"}} src={image.path} />\r\n        </div>\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Document, Page } from 'react-pdf';\r\nimport { pdfjs } from 'react-pdf';\r\nimport {Skeleton} from '@material-ui/lab'\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\ninterface Props{\r\n    file: string\r\n}\r\n\r\ninterface PageProps{\r\n    pageNumber:number,\r\n    pageWidth?:number,\r\n}\r\n\r\nfunction PDFPage({ pageNumber, pageWidth} : PageProps){\r\n    const [loaded, setLoaded] = useState(false);\r\n    const skeletonWidth = pageWidth || 600;\r\n    const skeletonHeight = skeletonWidth * 2;\r\n    return <div>\r\n             {!loaded && <Skeleton variant=\"rect\" width={skeletonWidth} height={skeletonHeight} /> }\r\n                \r\n            <Page renderAnnotationLayer={false} onLoadSuccess={()=> setLoaded(true) }  renderMode={loaded?undefined:'none'} pageNumber={pageNumber} width={pageWidth} />\r\n    </div>\r\n}\r\n\r\nexport function PDFViewer({file}:Props) {\r\n    const [numPages, setNumPages] = useState(0);\r\n   \r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const pageRef = useRef<HTMLDivElement | null>(null);\r\n    const [pageWidth, setPageWidth] = useState<number|undefined>(undefined);\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        if (pageRef != null && pageRef.current != null) {\r\n            const width = pageRef.current.getBoundingClientRect().width;\r\n            setPageWidth(width*0.6)\r\n        }\r\n\r\n    }, [pageRef])\r\n\r\n    function onDocumentLoadSuccess({ numPages, }: pdfjs.PDFDocumentProxy) {\r\n        setNumPages(numPages);\r\n       \r\n    }\r\n\r\n    var pages = [];\r\n\r\n    for(let i = 0; i < numPages; i ++){\r\n        pages.push(<PDFPage key={i} pageNumber={i+1} pageWidth={pageWidth}/>) \r\n    }\r\n    \r\n\r\n    return (\r\n        <div ref={pageRef} \r\n         style={{ width: '100%', height: '100vh', display: 'flex', flexDirection: 'column', alignItems: 'center', overflowY:'auto' }}>\r\n            <Document\r\n                file={file}\r\n                onLoadSuccess={onDocumentLoadSuccess}\r\n                renderMode={\"svg\"}\r\n                \r\n            >\r\n               {pages}\r\n            </Document>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport ProjectData from './interfaces/ProjectData';\r\nimport { Card, CardContent, CardHeader, Typography } from '@material-ui/core';\r\nimport ProjectImage from './ProjectImage';\r\nimport {PDFViewer} from './components/PDFViewer/PDFViewer';\r\n\r\ninterface Props {\r\n    project: ProjectData\r\n}\r\n\r\n\r\nexport default function DefaultProject({ project }: Props) {\r\n    var { name, description, images, page, pdf } = project || {};\r\n\r\n    \r\n\r\n\r\n    return <div style={{ width: \"100%\", height: \"100%\", display:\"flex\", alignItems:'center', flexDirection:'column' }} >\r\n        <div style={{ width: \"80%\", height: \"100%\", flex:1 }} >\r\n            <Card>\r\n                {name && <CardHeader title={name} />}\r\n                <CardContent>\r\n                    {description && <Typography variant=\"body1\">{description}</Typography>}\r\n                    <div  style={{ width: \"100%\", height: \"100%\", display:\"flex\", alignItems:'center', flexDirection:'row', flexWrap:\"wrap\"}}>\r\n                        {images && images.filter(img=>!img.exclude).map(img => <ProjectImage key={img.path} image={img} />)}\r\n                    </div>\r\n                    <div  style={{ width: \"100%\", height: \"100%\", display:\"flex\", alignItems:'center', flexDirection:'row', flexWrap:\"wrap\"}}>\r\n                        {pdf && <PDFViewer file={pdf} /> }\r\n                    </div>\r\n                </CardContent>\r\n                \r\n            </Card>\r\n            {page && <iframe allow=\"camera; microphone; fullscreen\" src={page} style={{width:\"100%\", height: \"90vh\", border:0}} /> }\r\n        </div>\r\n    </div>\r\n}","import { Collapse, CollapseProps } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n\r\n\r\nexport default function CollapseOnEnter(props : CollapseProps){\r\n    let [open, setOpen] = useState(false);\r\n    useEffect(()=>{\r\n        setOpen(true);\r\n    },[])\r\n    \r\n    return <Collapse {...props} in={open} unmountOnExit>\r\n        \r\n    </Collapse>\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport ProjectData from '../../interfaces/ProjectData';\r\nimport Project from '../../Project';\r\nimport { GridList, GridListTile } from '@material-ui/core';\r\nimport DefaultProject from '../../DefaultProject'\r\nimport CollapseOnEnter from '../../CollapseOnEnter';\r\nimport { useProjects } from '../../ProjectData';\r\nimport useWindowSize from './../../useWindowSize';\r\nimport { FilterButtons } from './FilterButtons';\r\nimport { useProjectsContext } from './ProjectsContext';\r\n\r\n\r\nfunction AddProjectPage({ project }: { project: ProjectData }) {\r\n    const myRef = useRef<HTMLDivElement | null>(null)\r\n    useEffect(() => { myRef?.current?.scrollIntoView() }, [myRef]);\r\n    return <div\r\n        ref={myRef}\r\n        style={{ marginTop: 10, marginBottom: 10 }}> <CollapseOnEnter> <DefaultProject project={project} /> </CollapseOnEnter>\r\n    </div>\r\n}\r\n\r\n\r\nfunction AddProjectPageBelow(project: ProjectData[], index: number, cols: number, selected: number) {\r\n    if (index % cols == 0 && index <= selected && selected < index + cols) {\r\n        return <div style={{ height: undefined, width: \"100%\" }}><AddProjectPage project={project[selected]} /></div>;\r\n    }\r\n    return [];\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ProjectGrid() {\r\n\r\n    const projectsState = useProjectsContext();\r\n    \r\n    const selectedProject = projectsState.selectedProject;\r\n    \r\n    const projects = projectsState.filteredProjects;\r\n    const size = useWindowSize();\r\n\r\n    const aspect = size ? size.width / size.height : 1;\r\n\r\n    const cols = Math.max(1, Math.floor(3 * aspect));\r\n\r\n    const cellHeight = size ? size.width / cols : 300;\r\n\r\n    var tiles: any[] = []\r\n    {\r\n        projects.forEach((project, index) => {\r\n\r\n            if (selectedProject != undefined) {\r\n                const projectPages = AddProjectPageBelow(projects, index, cols, selectedProject);\r\n                tiles.push(projectPages);\r\n            }\r\n            // if(index != selectedProject)\r\n            tiles.push(<GridListTile key={project.name + \"grid\"} cols={1}>\r\n                <Project key={project.name + \"project\"} data={project} onClick={() => {\r\n                    if (selectedProject == index)\r\n                        projectsState.setSelectedProject(undefined);\r\n                    else\r\n                        projectsState.setSelectedProject(index);\r\n                }} />\r\n            </GridListTile>)\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n                <GridList\r\n\r\n                    cellHeight={cellHeight} cols={cols}\r\n                    style={{ justifyContent: 'center', width: \"90%\", overflow: 'unset' }}\r\n                >\r\n                    {tiles}\r\n                </GridList>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n","import {useEffect, useState} from 'react';\r\n\r\ninterface ScreenDimension{\r\n    width: number,\r\n    height: number\r\n}\r\n\r\nexport default function useWindowSize() {\r\n    // Initialize state with undefined width/height so server and client renders match\r\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n    const [windowSize, setWindowSize] = useState<ScreenDimension | undefined>(undefined);\r\n  \r\n    useEffect(() => {\r\n      // Handler to call on window resize\r\n      function handleResize() {\r\n        // Set window width/height to state\r\n        setWindowSize({\r\n          width: window.innerWidth,\r\n          height: window.innerHeight,\r\n        });\r\n      }\r\n      \r\n      // Add event listener\r\n      window.addEventListener(\"resize\", handleResize);\r\n      \r\n      // Call handler right away so state gets updated with initial window size\r\n      handleResize();\r\n      \r\n      // Remove event listener on cleanup\r\n      return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []); // Empty array ensures that effect is only run on mount\r\n  \r\n    return windowSize;\r\n  }\r\n","import React, { useEffect } from 'react';\r\nimport {  useProjectsContext } from './ProjectsContext';\r\nimport projectListJson  from  '../../projectList.json';\r\nimport ProjectData from '../../interfaces/ProjectData';\r\n\r\nconst projectList = projectListJson as { path: string, old?: boolean }[];\r\n\r\nexport function UpdateProjectsFromServer() {\r\n    const projectContext = useProjectsContext();\r\n\r\n    useEffect(() => {\r\n        projectList.filter(p => !p.old).map(\r\n            async ({ path, old }: any) => {\r\n                var response = await fetch(\"/\" +path + \"/projectView.json\");\r\n                var json = await response.json() as ProjectData;\r\n                if(!projectContext.projects.some(p=>p.name == json.name))\r\n                    projectContext.addProjects([json]);\r\n            }\r\n        );\r\n    }, []);\r\n\r\n\r\n   return null;\r\n\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { FilterButtons } from './FilterButtons';\r\nimport { ProjectsContextProvider } from './ProjectsContext';\r\nimport ProjectGrid from './ProjectGrid';\r\nimport { UpdateProjectsFromServer } from './UpdateProjectsFromServer';\r\n\r\n\r\nexport default function ProjectPage() {\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width:'100%' }} >\r\n            <ProjectsContextProvider>\r\n                <UpdateProjectsFromServer/>\r\n                <FilterButtons />\r\n                <br />\r\n                 <ProjectGrid/>\r\n            </ProjectsContextProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\nexport default function ContactPage(){\r\n    return <div></div>\r\n}\r\n\r\n\r\n","\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { Document, Page } from 'react-pdf';\r\nimport { pdfjs } from 'react-pdf';\r\nimport {Skeleton} from '@material-ui/lab'\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nexport function ResumeViewer() {\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const pageRef = useRef<HTMLDivElement | null>(null);\r\n    const [pageWidth, setPageWidth] = useState<number|undefined>(undefined);\r\n\r\n    const skeletonWidth = pageWidth || 600;\r\n    const skeletonHeight = skeletonWidth * 2;\r\n\r\n    useEffect(() => {\r\n        if (pageRef != null && pageRef.current != null) {\r\n            const width = pageRef.current.getBoundingClientRect().width;\r\n            setPageWidth(width*0.6)\r\n        }\r\n\r\n    }, [pageRef])\r\n\r\n    function onDocumentLoadSuccess({ numPages }: any) {\r\n        setNumPages(numPages);\r\n       \r\n    }\r\n\r\n    return (\r\n        <div ref={pageRef} \r\n         style={{ width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n            <Document\r\n                file=\"/resume/resume20-1-2019.pdf\"\r\n                onLoadSuccess={onDocumentLoadSuccess}\r\n                renderMode={\"svg\"}\r\n            >\r\n                {!loaded && <Skeleton variant=\"rect\" width={skeletonWidth} height={skeletonHeight} /> }\r\n                <Page onLoadSuccess={()=> setLoaded(true) } renderAnnotationLayer={false} renderMode={loaded?undefined:'none'} pageNumber={pageNumber} width={pageWidth} />\r\n            </Document>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { CardHeader, IconButton, Typography } from '@material-ui/core';\r\nimport fileDownload from 'js-file-download';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\ninterface Props {\r\n    parents?: any[]\r\n}\r\n\r\nexport function ResumeDownload({ parents = [] }: Props) {\r\n\r\n    const download = async () => {\r\n        const response = await fetch(\"/resume/resume20-1-2019.pdf\");\r\n        const data = await response.arrayBuffer();\r\n        fileDownload(data, \"Luke-Hawkins-Resume.pdf\");\r\n\r\n    }\r\n\r\n    return <div>\r\n        <CardHeader \r\n        title={<Typography variant=\"h4\" color=\"textPrimary\">Luke Hawkins Resume</Typography>}\r\n        action={<IconButton title=\"Download\" onClick={download}><GetAppIcon  /></IconButton>}\r\n        />\r\n    </div>\r\n}","import React from 'react';\r\nimport {ResumeViewer} from './ResumeViewer';\r\nimport {ResumeDownload} from './ResumeDownload';\r\n\r\nexport default function ResumePage(){\r\n    return <div style={{width:'100%', display:'flex', flexDirection:'column', alignItems: 'center'}}>\r\n        <ResumeDownload/>\r\n        <ResumeViewer/>\r\n        </div>\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport Header from './Header';\r\nimport ProjectPage from './components/ProjectPage/ProjectPage';\r\nimport ContactPage from './components/ContactPage/ContactPage';\r\nimport ResumePage from './components/ResumePage/ResumePage';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: { type: 'dark',  }\r\n});\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <ThemeProvider theme={theme}>\r\n        <div style={{ display: 'flex', flexDirection: 'column', height: '100vh'}}>\r\n          <Header />\r\n          <div className=\"App-header\">\r\n\r\n\r\n            <Switch>\r\n              <Route path=\"/Projects/\" exact>\r\n                <ProjectPage />\r\n              </Route>\r\n              <Route path=\"/\" exact>\r\n                <ProjectPage />\r\n              </Route>\r\n              <Route path=\"/Contact/\" exact>\r\n                <ContactPage />\r\n              </Route>\r\n              <Route path=\"/Resume/\" exact>\r\n                <ResumePage />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </ThemeProvider>\r\n    </Router >\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n/*\r\n\r\nlet home = {\r\n    type: 'FlexPanel',\r\n    data: {\r\n      children: [\r\n        {\r\n          type: \"Text\",\r\n          data: { text: \"Hello World\", variant: \"h1\" }\r\n        },\r\n        {\r\n          type: \"Text\",\r\n          data: { text: \"Hello World\", variant: \"p\" }\r\n        },\r\n        {\r\n          type: \"Image\",\r\n          data: { path: \"favicon.ico\" }\r\n        }\r\n      ]\r\n    }\r\n  } as WidgetType;\r\n\r\n  const tileData: any = [\r\n    {\r\n      img: \"favicon.ico\",\r\n      title: 'Image',\r\n      author: 'author',\r\n    },\r\n  ];\r\n\r\n\r\n\r\n   <Widget widget={home} />\r\n  */","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}